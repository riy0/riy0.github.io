{"version":3,"sources":["components/AboutMe.js","components/Contact.js","components/Works.js","components/Home.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Aboutme","Component","Contact","className","col","Works","props","state","activeTab","this","shallow","style","minWidth","margin","color","height","background","border","colored","name","onChange","tabId","setState","ripple","toggleCategories","Home","src","alt","href","rel","target","aria-hidden","Main","exact","path","component","AboutMe","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.353352c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Aboutme extends Component {\n  render() {\n    return <div>about me page</div>;\n  }\n}\n\nexport default Aboutme;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"contact-body\">\n        <Grid className=\"contact-grid\">\n          <Cell col={6}>\n            <h3>Ryosuke Mishima</h3>\n          </Cell>\n          <Cell col={6}>half page</Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport {\n  Tab,\n  Tabs,\n  Cell,\n  Grid,\n  Card,\n  CardTitle,\n  CardText,\n  CardActions,\n  Button,\n  CardMenu,\n  IconButton\n} from \"react-mdl\";\n\nclass Works extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: 0 };\n  }\n\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      return (\n        <div className=\"works-grid\">\n          {/* project */}\n          <Card shallow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\n            <CardTitle\n              style={{\n                color: \"#fff\",\n                height: \"13rem\",\n                background:\n                  \"url(https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/236688/27d3d72b-4767-7b9a-f945-56cffde4cf89.png) center / cover\"\n              }}\n            >\n              My Project\n            </CardTitle>\n            <CardText>aiueo</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: \"#fff\" }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n\n          {/* project */}\n          <Card shallow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\n            <CardTitle\n              style={{\n                color: \"#fff\",\n                height: \"13rem\",\n                background:\n                  \"url(https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/236688/27d3d72b-4767-7b9a-f945-56cffde4cf89.png) center / cover\"\n              }}\n            >\n              My Project\n            </CardTitle>\n            <CardText>aiueo</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: \"#fff\" }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n\n          {/* project */}\n          <Card shallow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\n            <CardTitle\n              style={{\n                color: \"#fff\",\n                height: \"13rem\",\n                background:\n                  \"url(https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/236688/27d3d72b-4767-7b9a-f945-56cffde4cf89.png) center / cover\"\n              }}\n            >\n              My Project\n            </CardTitle>\n            <CardText>aiueo</CardText>\n            <CardActions border>\n              <Button colored>Github</Button>\n              <Button colored>Github</Button>\n            </CardActions>\n            <CardMenu style={{ color: \"#fff\" }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n        </div>\n      );\n    } else if (this.state.activeTab === 1) {\n      return (\n        <Card shallow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\n          <CardTitle\n            style={{\n              color: \"#fff\",\n              height: \"13rem\",\n              background:\n                \"url(https://i1.wp.com/weblion303.net/wp-content/uploads/2019/02/1_3SVfBkNZI2f-sspiq59xcw.png?fit=391%2C321&ssl=1) center / cover\"\n            }}\n          >\n            My Project\n          </CardTitle>\n          <CardText>aiueo</CardText>\n          <CardActions border>\n            <Button colored>Github</Button>\n            <Button colored>Github</Button>\n          </CardActions>\n          <CardMenu style={{ color: \"#fff\" }}>\n            <IconButton name=\"share\" />\n          </CardMenu>\n        </Card>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"category-tabs\">\n        <Tabs\n          activeTab={this.state.activeTab}\n          onChange={tabId => this.setState({ activeTab: tabId })}\n          ripple\n        >\n          <Tab>Projects</Tab>\n          <Tab>TED Talks</Tab>\n        </Tabs>\n\n        <Grid>\n          <Cell col={12}>\n            <div className=\"content\">{this.toggleCategories()} </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Works;\n","import React, { Component } from \"react\";\nimport { Grid, Cell } from \"react-mdl\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Grid className=\"home-grid\">\n          <Cell col={12}>\n            <img\n              src=\"https://lh3.googleusercontent.com/HGlZLRPYspbBAaKUYv0sWdqTOrktYvJXAbHvpebnJ3bvwFXwv_4CnzTjLTOdgjAe0r1Ftdtn4AxALrMHx9fycwirGsG7ggMozJaSXBuixr4sIg2BqYlYDae8LrQALFQwtnhSRtILvSJ7NbnHudU-_cVUSCCEmTkx-6zG2uv050O9_zY9DGWpeUO702zD4fGscIv9ymRnYPHJyGSuPM9lG7gb_glZ8jd1I4lngD6Ox9Yr3sWy8dTbqd8fqbisPq_jrnpRBxgEGa7SRIE40gLiZe2kVf16JcV3lqacEIecuCprixsrYdgbf9ddBNObX0dRzQry_OEazKBVHpgSy2rSI7ulQnydHp1hIBw5PXsf6AvwxX5srIlnTkiPECCzN39FOuLP6RHI8PR68OiIZ3b9qZ2JVXQFCTN2yZjFP06Cde9XXUTMXxAIJMwQ0j1bgvl4BHzDBK7LmZxVEkIrxY1i_ZN_dPeYBTg9d9R_EmargLWx088PduAEhqfs49zKfNtpgEj9YsL6Oey8Qyjmp2Td8Ff_MPstyXOf0pJqNLNqDbaRMlxM-m3wAFTIav0OohEzCD_2OK9nBDIcL9c0HGcGBrO9BeEj2BGa4PAFaEYdD55F73vyRceL0sIUnvqnY7qD6dG3Rthcytb7l07urpttSVtnqpwBn36r--czUr8QCcEJwj-lkTkZfIWQy0y60Z-ILlDOJl9tfwvqTq_EOS7ZbqjJruxUG16N7sOy93nIWgM7TQsa=w1057-h793-no\"\n              className=\"profile-img\"\n              alt=\"profile\"\n            />\n            <div className=\"banner-text\">\n              <h2>JAIST student</h2>\n            </div>\n\n            <hr />\n\n            <div className=\"social-links\">\n              {/* Github */}\n              <a\n                href=\"http://google.com\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n              </a>\n\n              {/* TED Talks */}\n              <a\n                href=\"http://google.com\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n              </a>\n\n              {/* Instagram */}\n              <a\n                href=\"http://google.com\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n              </a>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport AboutMe from \"./AboutMe\";\nimport Contact from \"./Contact\";\nimport Works from \"./Works\";\nimport Home from \"./Home\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/aboutme\" component={AboutMe} />\n    <Route path=\"/works\" component={Works} />\n    <Route path=\"/contact\" component={Contact} />\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport Main from \"./components/Main\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-color\" title=\"Title\" scroll>\n            <Navigation>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/aboutme\">aboutme</Link>\n              <Link to=\"/works\">works</Link>\n              <Link to=\"/contact\">conatct</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/aboutme\">aboutme</Link>\n              <Link to=\"/works\">works</Link>\n              <Link to=\"/contact\">conatct</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}